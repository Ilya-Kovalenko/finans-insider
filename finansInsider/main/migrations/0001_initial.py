# Generated by Django 4.0.2 on 2022-02-20 18:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MoneyValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(blank=True, max_length=20, null=True, verbose_name='Строковый ISO-код валюты')),
                ('units', models.BigIntegerField(blank=True, null=True, verbose_name='Целая часть суммы, может быть отрицательным числом')),
                ('nano', models.IntegerField(blank=True, null=True, verbose_name='Дробная часть суммы, может быть отрицательным числом')),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.BigIntegerField(blank=True, null=True, verbose_name='Целая часть суммы, может быть отрицательным числом')),
                ('nano', models.IntegerField(blank=True, null=True, verbose_name='Дробная часть суммы, может быть отрицательным числом')),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(blank=True, max_length=12, null=True, verbose_name='Figi-идентификатор инструмента.')),
                ('ticker', models.CharField(blank=True, max_length=12, null=True, verbose_name='Тикер инструмента.')),
                ('class_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Класс-код (секция торгов).')),
                ('isin', models.CharField(blank=True, max_length=12, null=True, verbose_name='Isin-идентификатор инструмента.')),
                ('lot', models.IntegerField(blank=True, null=True, verbose_name='Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные данному параметру.')),
                ('currency', models.CharField(blank=True, max_length=20, null=True, verbose_name='Валюта расчётов.')),
                ('short_enabled_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для операций в шорт.')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название инструмента.')),
                ('exchange', models.CharField(blank=True, max_length=30, null=True, verbose_name='Торговая площадка.')),
                ('country_of_risk', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('country_of_risk_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('trading_status', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Текущий режим торгов инструмента.')),
                ('otc_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак внебиржевой ценной бумаги.')),
                ('buy_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для покупки.')),
                ('sell_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для продажи.')),
                ('iso_currency_name', models.CharField(blank=True, max_length=3, null=True, verbose_name='Строковый ISO-код валюты.')),
                ('api_trade_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности торгов через API.')),
                ('ipo_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Дата IPO акции в часовом поясе UTC.')),
                ('issue_size', models.BigIntegerField(blank=True, null=True, verbose_name='Размер выпуска.')),
                ('sector', models.CharField(blank=True, max_length=30, null=True, verbose_name='Сектор экономики.')),
                ('issue_size_plan', models.BigIntegerField(blank=True, null=True, verbose_name='Плановый размер выпуска.')),
                ('div_yield_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак наличия дивидендной доходности.')),
                ('share_type', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Тип акции. Возможные значения: ShareType')),
                ('dlong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong', to='main.quotation', verbose_name='Ставка риска минимальной маржи в лонг.')),
                ('dlong_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в лонг.')),
                ('dshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort', to='main.quotation', verbose_name='Ставка риска минимальной маржи в шорт.')),
                ('dshort_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в шорт.')),
                ('klong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_klong', to='main.quotation', verbose_name='Коэффициент ставки риска длинной позиции по инструменту.')),
                ('kshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_kshort', to='main.quotation', verbose_name='Коэффициент ставки риска короткой позиции по инструменту.')),
                ('min_price_increment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_min_price_increment', to='main.quotation', verbose_name='Шаг цены.')),
                ('nominal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_nominal', to='main.moneyvalue', verbose_name='Номинал.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricCandle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.BigIntegerField(blank=True, null=True, verbose_name='Объём торгов в лотах.')),
                ('time', models.PositiveIntegerField(blank=True, null=True, verbose_name='Время свечи в часовом поясе UTC')),
                ('is_complete', models.BooleanField(blank=True, null=True, verbose_name='Признак завершённости свечи. false значит, свеча за текущие интервал ещё сформирована не полностью.')),
                ('close', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_close', to='main.quotation', verbose_name='Цена закрытия за 1 лот.')),
                ('high', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_high', to='main.quotation', verbose_name='Максимальная цена за 1 лот.')),
                ('low', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_low', to='main.quotation', verbose_name='Минимальная цена за 1 лот.')),
                ('open', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_open', to='main.quotation', verbose_name='Цена открытия за 1 лот.')),
            ],
        ),
        migrations.CreateModel(
            name='Etf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(blank=True, max_length=12, null=True, verbose_name='Figi-идентификатор инструмента.')),
                ('ticker', models.CharField(blank=True, max_length=12, null=True, verbose_name='Тикер инструмента.')),
                ('class_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Класс-код (секция торгов).')),
                ('isin', models.CharField(blank=True, max_length=12, null=True, verbose_name='Isin-идентификатор инструмента.')),
                ('lot', models.IntegerField(blank=True, null=True, verbose_name='Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные данному параметру.')),
                ('currency', models.CharField(blank=True, max_length=20, null=True, verbose_name='Валюта расчётов.')),
                ('short_enabled_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для операций в шорт.')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название инструмента.')),
                ('exchange', models.CharField(blank=True, max_length=30, null=True, verbose_name='Торговая площадка.')),
                ('country_of_risk', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('country_of_risk_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('trading_status', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Текущий режим торгов инструмента.')),
                ('otc_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак внебиржевой ценной бумаги.')),
                ('buy_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для покупки.')),
                ('sell_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для продажи.')),
                ('iso_currency_name', models.CharField(blank=True, max_length=3, null=True, verbose_name='Строковый ISO-код валюты.')),
                ('api_trade_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности торгов через API.')),
                ('focus_type', models.CharField(blank=True, max_length=22, null=True, verbose_name='\nfocus_type\nВозможные значения:\nequity — акции;\nfixed_income — облигации;\nmixed_allocation — смешанный;\nmoney_market — денежный рынок;\nreal_estate — недвижимость;\ncommodity — товары;\nspecialty — специальный;\nprivate_equity — private equity;\nalternative_investment — альтернативные инвестиции.')),
                ('released_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Дата выпуска в часовом поясе UTC.')),
                ('sector', models.CharField(blank=True, max_length=30, null=True, verbose_name='Сектор экономики.')),
                ('rebalancing_freq', models.CharField(blank=True, max_length=20, null=True, verbose_name='Частота ребалансировки.')),
                ('dlong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong', to='main.quotation', verbose_name='Ставка риска минимальной маржи в лонг.')),
                ('dlong_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в лонг.')),
                ('dshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort', to='main.quotation', verbose_name='Ставка риска минимальной маржи в шорт.')),
                ('dshort_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в шорт.')),
                ('fixed_commission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_fixed_commission', to='main.quotation', verbose_name='Размер фиксированной комиссии фонда.')),
                ('klong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_klong', to='main.quotation', verbose_name='Коэффициент ставки риска длинной позиции по инструменту.')),
                ('kshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_kshort', to='main.quotation', verbose_name='Коэффициент ставки риска короткой позиции по инструменту.')),
                ('min_price_increment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_min_price_increment', to='main.quotation', verbose_name='Шаг цены.')),
                ('nominal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_nominal', to='main.moneyvalue', verbose_name='Номинал.')),
                ('num_shares', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_num_shares', to='main.quotation', verbose_name='Количество акций фонда в обращении.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(blank=True, max_length=12, null=True, verbose_name='Figi-идентификатор инструмента.')),
                ('ticker', models.CharField(blank=True, max_length=12, null=True, verbose_name='Тикер инструмента.')),
                ('class_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Класс-код (секция торгов).')),
                ('isin', models.CharField(blank=True, max_length=12, null=True, verbose_name='Isin-идентификатор инструмента.')),
                ('lot', models.IntegerField(blank=True, null=True, verbose_name='Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные данному параметру.')),
                ('currency', models.CharField(blank=True, max_length=20, null=True, verbose_name='Валюта расчётов.')),
                ('short_enabled_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для операций в шорт.')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название инструмента.')),
                ('exchange', models.CharField(blank=True, max_length=30, null=True, verbose_name='Торговая площадка.')),
                ('country_of_risk', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('country_of_risk_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('trading_status', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Текущий режим торгов инструмента.')),
                ('otc_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак внебиржевой ценной бумаги.')),
                ('buy_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для покупки.')),
                ('sell_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для продажи.')),
                ('iso_currency_name', models.CharField(blank=True, max_length=3, null=True, verbose_name='Строковый ISO-код валюты.')),
                ('api_trade_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности торгов через API.')),
                ('dlong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong', to='main.quotation', verbose_name='Ставка риска минимальной маржи в лонг.')),
                ('dlong_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в лонг.')),
                ('dshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort', to='main.quotation', verbose_name='Ставка риска минимальной маржи в шорт.')),
                ('dshort_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в шорт.')),
                ('klong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_klong', to='main.quotation', verbose_name='Коэффициент ставки риска длинной позиции по инструменту.')),
                ('kshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_kshort', to='main.quotation', verbose_name='Коэффициент ставки риска короткой позиции по инструменту.')),
                ('min_price_increment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_min_price_increment', to='main.quotation', verbose_name='Шаг цены.')),
                ('nominal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_nominal', to='main.moneyvalue', verbose_name='Номинал.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figi', models.CharField(blank=True, max_length=12, null=True, verbose_name='Figi-идентификатор инструмента.')),
                ('ticker', models.CharField(blank=True, max_length=12, null=True, verbose_name='Тикер инструмента.')),
                ('class_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Класс-код (секция торгов).')),
                ('isin', models.CharField(blank=True, max_length=12, null=True, verbose_name='Isin-идентификатор инструмента.')),
                ('lot', models.IntegerField(blank=True, null=True, verbose_name='Лотность инструмента. Возможно совершение операций только на количества ценной бумаги, кратные данному параметру.')),
                ('currency', models.CharField(blank=True, max_length=20, null=True, verbose_name='Валюта расчётов.')),
                ('short_enabled_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для операций в шорт.')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название инструмента.')),
                ('exchange', models.CharField(blank=True, max_length=30, null=True, verbose_name='Торговая площадка.')),
                ('country_of_risk', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('country_of_risk_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Наименование страны риска, т.е. страны, в которой компания ведёт основной бизнес.')),
                ('trading_status', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Текущий режим торгов инструмента.')),
                ('otc_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак внебиржевой ценной бумаги.')),
                ('buy_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для покупки.')),
                ('sell_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности для продажи.')),
                ('iso_currency_name', models.CharField(blank=True, max_length=3, null=True, verbose_name='Строковый ISO-код валюты.')),
                ('api_trade_available_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак доступности торгов через API.')),
                ('coupon_quantity_per_year', models.IntegerField(blank=True, null=True, verbose_name='Количество выплат по купонам в год.')),
                ('maturity_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Дата погашения облигации в часовом поясе UTC.')),
                ('state_reg_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Дата выпуска облигации в часовом поясе UTC.')),
                ('placement_date', models.PositiveIntegerField(blank=True, null=True, verbose_name='Дата размещения в часовом поясе UTC.')),
                ('sector', models.CharField(blank=True, max_length=30, null=True, verbose_name='Сектор экономики.')),
                ('issue_kind', models.CharField(blank=True, max_length=15, null=True, verbose_name='Форма выпуска. Возможные значения:\ndocumentary — документарная;\nnon_documentary — бездокументарная.')),
                ('issue_size', models.BigIntegerField(blank=True, null=True, verbose_name='Размер выпуска.')),
                ('issue_size_plan', models.BigIntegerField(blank=True, null=True, verbose_name='Плановый размер выпуска.')),
                ('floating_coupon_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак облигации с плавающим купоном.')),
                ('perpetual_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак бессрочной облигации.')),
                ('amortization_flag', models.BooleanField(blank=True, null=True, verbose_name='Признак облигации с амортизацией долга.')),
                ('aci_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_aci_value', to='main.moneyvalue', verbose_name='Значение НКД (накопленного купонного дохода) на дату.')),
                ('dlong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong', to='main.quotation', verbose_name='Ставка риска минимальной маржи в лонг.')),
                ('dlong_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dlong_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в лонг.')),
                ('dshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort', to='main.quotation', verbose_name='Ставка риска минимальной маржи в шорт.')),
                ('dshort_min', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_dshort_min', to='main.quotation', verbose_name='Ставка риска начальной маржи в шорт.')),
                ('klong', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_klong', to='main.quotation', verbose_name='Коэффициент ставки риска длинной позиции по инструменту.')),
                ('kshort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_kshort', to='main.quotation', verbose_name='Коэффициент ставки риска короткой позиции по инструменту.')),
                ('min_price_increment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_min_price_increment', to='main.quotation', verbose_name='Шаг цены.')),
                ('nominal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_nominal', to='main.moneyvalue', verbose_name='Номинал.')),
                ('placement_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related_placement_price', to='main.moneyvalue', verbose_name='Цена размещения.')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
